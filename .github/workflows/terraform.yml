name: Terraform-azure-connection

on:
  workflow_dispatch:
  push:
    branches:
      - master

permissions:
  id-token: write    # REQUIRED for OIDC authentication
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login with OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Show Azure context
        run: |
          az account show
          az group list

      - name: Install Terratag v0.1.29 to check tags
        run: |
          curl -LO https://github.com/env0/terratag/releases/download/v0.1.29/terratag_0.1.29_linux_amd64.tar.gz
          tar -xzf terratag_0.1.29_linux_amd64.tar.gz
          chmod +x terratag
          sudo mv terratag /usr/local/bin/
          terratag --version

  deploy:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev, test, prod]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login with OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Run tfsec (Terraform Security Scanner)
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Terraform Init
        run: terraform init

      - name: Select/Create Workspace
        run: terraform workspace select -or-create ${{ matrix.environment }}

      - name: Terraform Plan
        run: terraform plan -var="subscription_id=${{ secrets.ARM_SUBSCRIPTION_ID }}" -var="workflow=${{ matrix.environment }}"

      - name: Check tags using terratag
        run: |
          terratag --directory . \
            --tags="{\"environment\":\"${{ matrix.environment }}\",\"owner\":\"devops\",\"project\":\"multi-env-demo\"}"

      - name: Terraform Apply
        run: terraform apply -var="subscription_id=${{ secrets.ARM_SUBSCRIPTION_ID }}" -var="workflow=${{ matrix.environment }}" -var="username=${{ secrets.VM_USERNAME }}" -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" --auto-approve

      - name: Terraform Destroy
        run: terraform destroy -var="subscription_id=${{ secrets.ARM_SUBSCRIPTION_ID }}" -var="workflow=${{ matrix.environment }}" -var="username=${{ secrets.VM_USERNAME }}" -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" --auto-approve